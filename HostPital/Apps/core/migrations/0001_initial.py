# Generated by Django 4.1.7 on 2023-04-17 16:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_alter_user_username'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Max 150 caracteres. Letras, numeros y @ / . / + / - / _ .', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cc', models.IntegerField(blank=True, null=True, verbose_name='Numero de documento')),
                ('telefono', models.PositiveIntegerField(blank=True, help_text='+ 57', null=True)),
                ('fechaNacimiento', models.DateField(blank=True, help_text='AAAA-MM-DD', null=True, verbose_name='Fecha nacimiento')),
                ('tipo', models.CharField(blank=True, choices=[('doctor', 'Doctor'), ('enfermero', 'Enfermero'), ('cliente', 'Cliente')], max_length=58, null=True, verbose_name='Tipo de usuario')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DoctorEsp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('espcialidad', models.CharField(blank=True, choices=[('anestesiologo', 'Anestesiólogo'), ('cardiologo', 'Cardiólogo'), ('cirujano', 'Cirujano'), ('dermatologo', 'Dermatólogo'), ('endocrinologo', 'Endocrinólogo'), ('gastroenterologo', 'Gastroenterólogo'), ('ginecologo', 'Ginecólogo'), ('hematologo', 'Hematólogo'), ('infectologo', 'Infectólogo'), ('internista', 'Internista'), ('nefrologo', 'Nefrólogo'), ('neurologo', 'Neurólogo'), ('oftalmologo', 'Oftalmólogo'), ('oncologo', 'Oncólogo'), ('otorrinolaringologo', 'Otorrinolaringólogo'), ('patologo', 'Patólogo'), ('pediatra', 'Pediatra'), ('psiquiatra', 'Psiquiatra'), ('radiologo', 'Radiólogo'), ('reumatologo', 'Reumatólogo'), ('traumatologo', 'Traumatólogo'), ('general', 'Médico General')], max_length=68, null=True, verbose_name='Especialidad')),
                ('user_doctor', models.ForeignKey(blank=True, limit_choices_to={'tipo': 'doctor'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Doctor')),
            ],
            options={
                'verbose_name': 'Dr. con especialidad',
                'verbose_name_plural': 'Dr. con especialidades',
            },
        ),
    ]
